services:
    http:
        container_name: magento_http
        platform: ${DOCKER_PLATFORM_http:-linux/amd64}
        build:
            context: .
            dockerfile: ./docker/http/Dockerfile
        env_file:
            - .env
        ports:
            - '${FORWARD_HTTP_PORT:-80}:80'
        volumes:
            - ./magento:/var/www/html/
        networks:
            - magento_network
    mysql:
        container_name: magento_mysql
        platform: ${DOCKER_PLATFORM_magento:-linux/amd64}
        image: mysql:8.4.3
        ports:
            - '${FORWARD_MYSQL_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-magento}
            MYSQL_USER: ${MYSQL_USERNAME:-magento}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD:-magento}
            MYSQL_DATABASE: ${MYSQL_DATABASE:-magento}
        command: --default-authentication-plugin=mysql_native_password
        volumes:
            - ./data/mysql:/var/lib/mysql
        networks:
            - magento_network
    mailhog:
        container_name: magento_mailhog
        platform: ${DOCKER_PLATFORM_mailhog:-linux/amd64}
        image: mailhog/mailhog
        logging:
            driver: 'none'
        ports:
            - ${FORWARD_MAILHOG_SMTP_PORT:-1025}:1025
            - ${FORWARD_MAILHOG_WEB_PORT:-8025}:8025
        networks:
            - magento_network
networks:
    magento_network:
        driver: bridge